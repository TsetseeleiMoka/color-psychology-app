# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LObEPL3P1uGzy6c5HoIzMUX6okxKbfKZ
"""

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from PIL import Image
import os

# Set page configuration
st.set_page_config(page_title="Colour Psychology Explorer", layout="wide")

# Load dataset
@st.cache_data
def load_data():
    return pd.read_csv("color_psychology_data.csv")  # CSV is in same folder as app.py

df = load_data()
st.write("Available columns:", df.columns.tolist())

# App title
st.title("üé® Colour Psychology Explorer")
st.markdown("Explore emotional associations of colours and visualise their psychological impact.")

# Show dataframe
if st.checkbox("Show raw data"):
    st.dataframe(df)

# Section 1: Bar chart of emotions associated with each colour
st.header("üîç Most Common Emotions Associated With Colours")

selected_colour = st.selectbox("Choose a colour:", df['color'].unique())

filtered_df = df[df['color'] == selected_colour]
emotion_counts = filtered_df['emotion'].value_counts()

st.subheader(f"Emotions commonly associated with {selected_colour.capitalize()}:")
fig, ax = plt.subplots()
sns.barplot(x=emotion_counts.values, y=emotion_counts.index, palette='pastel', ax=ax)
ax.set_xlabel("Count")
ax.set_ylabel("Emotion")
st.pyplot(fig)

# Section 2: Display wordcloud if available
st.header("‚òÅÔ∏è Word Cloud of Associated Words")

wordcloud_path = f"wordclouds/{selected_colour.lower()}.png"

if os.path.exists(wordcloud_path):
    st.image(Image.open(wordcloud_path), caption=f"Words associated with {selected_colour}")
else:
    st.warning(f"Wordcloud image for '{selected_colour}' not found.")

# Section 3: Colour filter + emotion breakdown
st.header("üìä Explore Colour Associations by Emotion")

selected_emotion = st.selectbox("Choose an emotion:", df['emotion'].unique())

emotion_df = df[df['emotion'] == selected_emotion]
colour_counts = emotion_df['color'].value_counts()

fig2, ax2 = plt.subplots()
sns.barplot(x=colour_counts.values, y=colour_counts.index, palette='bright', ax=ax2)
ax2.set_xlabel("Count")
ax2.set_ylabel("Colour")
st.pyplot(fig2)

# Footer
st.markdown("---")
st.caption("Made with üíô by Moka")