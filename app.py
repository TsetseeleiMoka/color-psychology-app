# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LObEPL3P1uGzy6c5HoIzMUX6okxKbfKZ
"""

import streamlit as st
import pandas as pd
import plotly.graph_objs as go
import json
import os

st.set_page_config(page_title="üé® Colour Psychology Explorer", layout="centered")

# --- Load Data ---

@st.cache_data
def load_data():
    return pd.read_csv("color_psychology_data.csv")

df = load_data()

# --- Load usage examples JSON ---
@st.cache_data
def load_examples():
    with open("color_examples.json", "r") as f:
        return json.load(f)

examples = load_examples()

# --- Colour name mapping ---
hex_to_name = {
    '#FF0000': 'red', '#FFA500': 'orange', '#FF00FF': 'magenta', '#000000': 'black',
    '#4B0082': 'indigo', '#800080': 'purple', '#FFD700': 'gold', '#FFC0CB': 'pink',
    '#A52A2A': 'brown', '#0000FF': 'blue', '#C0C0C0': 'silver', '#FFFF00': 'yellow',
    '#008000': 'green', '#40E0D0': 'turquoise', '#FFFFFF': 'white', '#808080': 'grey'
}

available_colours = list(hex_to_name.keys())

# --- Initialize session state ---
if "selected_color" not in st.session_state:
    st.session_state.selected_color = None

# --- Title ---
st.title("üé® Colour Psychology Explorer")
st.write("Explore emotional associations of colours and visualise their psychological impact.")

# --- Colour Picker Section ---

st.subheader("üé® Pick a Colour")

cols = st.columns(8)
for i, hex_col in enumerate(available_colours):
    is_selected = st.session_state.selected_color == hex_col
    border_style = "3px solid black" if is_selected else "1px solid #ccc"
    if cols[i % 8].button("", key=hex_col, help=hex_to_name[hex_col],
                         args=None,
                         kwargs=None,
                         ):
        st.session_state.selected_color = hex_col
    # Render coloured box with border to indicate selection
    cols[i % 8].markdown(
        f"""
        <div style="
            background-color: {hex_col};
            border: {border_style};
            width: 40px;
            height: 40px;
            border-radius: 6px;
            margin: 0 auto;
            pointer-events: none;">
        </div>
        """, unsafe_allow_html=True
    )

if not st.session_state.selected_color:
    st.info("Please select a colour above to explore its psychology.")

# --- Display selected colour info ---

if st.session_state.selected_color:
    selected_hex = st.session_state.selected_color
    selected_name = hex_to_name[selected_hex]

    st.markdown("---")
    st.write(f"üéØ Selected Colour: **{selected_name.title()}** (`{selected_hex}`)")

    # Pie chart of top 5 colours in dataset
    with st.expander("üîç Top 5 Most Common Colours in Dataset", expanded=True):
        colour_counts = df['hex'].value_counts().head(5)
        labels = [hex_to_name.get(c, c).title() for c in colour_counts.index]
        fig_pie = go.Figure(go.Pie(
            labels=labels,
            values=colour_counts.values,
            marker=dict(colors=colour_counts.index),
            hoverinfo='label+percent',
            textinfo='label+value'
        ))
        st.plotly_chart(fig_pie, use_container_width=True)
        st.markdown("Hover over the segments to see details.")

    st.markdown("---")

    # Word cloud image section
    with st.expander("‚òÅÔ∏è Emotional Word Cloud", expanded=True):
        wordcloud_path = os.path.join("wordclouds", f"{selected_name}.png")
        if os.path.exists(wordcloud_path):
            st.image(wordcloud_path, caption=f"Word Cloud for {selected_name.title()}")
        else:
            st.warning("Word cloud image not found for this colour.")

    st.markdown("---")

    # Examples section (Marketing, Interior Design, Psychology)
    with st.expander(f"üß™ Examples of {selected_name.title()} in Use", expanded=True):
        marketing = examples.get(selected_name, {}).get("Marketing", "wip")
        interior = examples.get(selected_name, {}).get("Interior Design", "wip")
        psychology = examples.get(selected_name, {}).get("Psychology", "wip")

        st.markdown("### üíº Marketing")
        st.write(marketing)

        st.markdown("### üè° Interior Design")
        st.write(interior)

        st.markdown("### üß† Psychology")
        st.write(psychology)

else:
    st.markdown("---")
    st.info("Pick a colour above to see examples of its use in marketing, interior design, and psychology.")

# --- About Section ---
with st.expander("‚ÑπÔ∏è About This Explorer"):
    st.write(
        """
        This tool helps you explore how different colours are psychologically and emotionally perceived.
        Select a colour to discover its top associated emotions and see visual word clouds representing these associations.
        """
    )

# --- Raw Data Section ---
with st.expander("üßæ Show Raw Dataset"):
    st.dataframe(df)

# --- Footer ---
st.markdown("---")
st.caption("Made with üíô by Moka")